$date
	Wed Sep 10 09:10:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! Zetb $end
$var wire 1 " Vtb $end
$var wire 32 # Resulttb [31:0] $end
$var wire 1 $ Ntb $end
$var wire 1 % Ctb $end
$var reg 3 & ALUControltb [2:0] $end
$var reg 32 ' Atb [31:0] $end
$var reg 32 ( Btb [31:0] $end
$scope module uut $end
$var wire 32 ) A [31:0] $end
$var wire 3 * ALUControl [2:0] $end
$var wire 32 + B [31:0] $end
$var wire 1 % C $end
$var wire 32 , Result [31:0] $end
$var wire 1 " V $end
$var wire 32 - a_and_b [31:0] $end
$var wire 32 . a_or_b [31:0] $end
$var wire 32 / not_b [31:0] $end
$var wire 32 0 sum [31:0] $end
$var wire 32 1 slt [31:0] $end
$var wire 32 2 mux_2 [31:0] $end
$var wire 32 3 mux_1 [31:0] $end
$var wire 1 4 cout $end
$var wire 1 ! Ze $end
$var wire 1 $ N $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
04
b11 3
b1000 2
b0 1
b1000 0
b11111111111111111111111111111100 /
b111 .
b1 -
b1000 ,
b11 +
b0 *
b101 )
b11 (
b101 '
b0 &
0%
0$
b1000 #
0"
0!
$end
#10000
1%
14
b10 #
b10 ,
b10 2
b11111111111111111111111111111100 3
b10 0
b1 &
b1 *
#20000
04
0%
1!
b0 #
b0 ,
b0 2
b1111000011110000111100001111 3
b1 1
b11110000111100001111000011110000 /
b0 -
b11111111111111111111111111111111 .
b11111111111111111111111111111111 0
b10 &
b10 *
b1111000011110000111100001111 (
b1111000011110000111100001111 +
b11110000111100001111000011110000 '
b11110000111100001111000011110000 )
#30000
1$
b11110000111100001111000011110000 3
b1 1
0!
b11111111111111111111111111111111 #
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 2
b11100001111000011110000111100001 0
14
b11 &
b11 *
#40000
0$
b1 #
b1 ,
b1 2
b11111111111111111111111111110101 3
b11111111111111111111111111110101 /
b1111 .
b11111111111111111111111111111011 0
04
b101 &
b101 *
b1010 (
b1010 +
b101 '
b101 )
#50000
1"
1$
b1 3
b1 1
0%
b10000000000000000000000000000000 #
b10000000000000000000000000000000 ,
b10000000000000000000000000000000 2
b11111111111111111111111111111110 /
b1 -
b1111111111111111111111111111111 .
b10000000000000000000000000000000 0
04
b0 &
b0 *
b1 (
b1 +
b1111111111111111111111111111111 '
b1111111111111111111111111111111 )
#60000
0"
1$
b1 1
b11111111111111111111111111111110 #
b11111111111111111111111111111110 ,
b11111111111111111111111111111110 2
b11111111111111111111111111111010 /
b11111111111111111111111111111010 3
b111 .
b11111111111111111111111111111110 0
b1 &
b1 *
b101 (
b101 +
b11 '
b11 )
#70000
